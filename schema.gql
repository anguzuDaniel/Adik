# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Users {
  id: Int!
  username: String!
  email: String!
  role: String!
  supabaseUserId: String!
  password: String!
}

type AuthPayload {
  userId: ID!
  username: String
  email: String!
  role: Role!
  accessToken: String!
  message: String
}

enum Role {
  ADMIN
  USER
}

type Messages {
  id: Int!
  senderId: String!
  receiverId: String!
  content: String!
  parentId: Float
  timestamp: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DeleteMessagesResponse {
  success: Boolean!
  message: String!
}

type Journal {
  id: Int!
  user: String!
  content: String!
  sentimentScore: Float!
  createdAt: DateTime!
}

type Query {
  user(id: Int!): Users!
  viewer: Users!
  journals: [Journal!]!
  journal(id: Int!): Journal!
}

type Mutation {
  createUser(createUserInput: CreateUsersInput!): Users!
  updateUser(updateUserInput: UpdateUsersInput!): Users!
  removeUser(id: Int!): Users!
  signUp(input: CreateUsersInput!): AuthPayload!
  signIn(input: SignInInput!): AuthPayload!
  createMessage(createMessageInput: CreateMessagesInput!): Messages!
  getMessageBetweenUsers(receiverId: String!): [Messages!]!
  deleteMessage(messageId: Float!): DeleteMessagesResponse!
  createJournal(createJournalInput: CreateJournalInput!): Journal!
  updateJournal(updateJournalInput: UpdateJournalInput!): Journal!
  removeJournal(id: Int!): Journal!
}

input CreateUsersInput {
  username: String!
  email: String!
  role: Role!
  password: String!
}

input UpdateUsersInput {
  username: String
  email: String
  role: String
  password: String
  id: Int!
}

input SignInInput {
  email: String!
  password: String!
}

input CreateMessagesInput {
  content: String!
  senderId: String!
  parentId: Float
  receiverId: String!
}

input CreateJournalInput {
  id: Int!
  user: String!
  content: String!
  sentimentScore: Float!
  createdAt: DateTime!
}

input UpdateJournalInput {
  id: Int!
  user: String
  content: String
  sentimentScore: Float
  createdAt: DateTime
}